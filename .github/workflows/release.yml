name: build

on:
  push:
    branches:
      - master

jobs:
  support:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [6.x, 8.x, 10.x, 12.x]

    steps:
      - uses: actions/checkout@v1
      - name: node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: updating npm
        run: npm i -g npm
      - name: installing
        run: npm ci
      - name: testing
        run: npm test
        env:
          CI: true

  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v1
      - name: node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: installing
        run: npm ci
      - name: testing
        run: npm test -- --coverage
        env:
          CI: true
      - name: coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
